/* ================================

layout.css 

- Gestaltung der Layoutbereiche 

- Sticky Footer 
  - body ist Flex-Container 
  - Variante 1: .site-content hat flex: 1
  - Variante 2: .site-footer hat margin-top: auto 

- Hauptnavigation in eigenem Stylesheet 
- Inhaltsbereich in content.css 

================================ */

@media screen { 

  /**
    * Layout mit voller Breite 
    * .wrapper für Layoutbereiche oder zusätzliche <div>-Elemente 
    *
    */ 
  
  body {
    background: white; 
    margin: 0; 
    
    min-height: 100vh; 
    display: flex; 
    flex-flow: column; 
  }
  
  .wrapper {
    min-width: 320px; 
    max-width: 720px; 
    padding: 0 1rem; 
    margin: 0 auto; 
  }
    
  
  /**
    * Kopfbereich   
    */ 

  .site-header {
    padding-top: 1rem; 
  } 
  
  /* Abstände Logo und Slogan anpassen */ 
  .site-logo {
    margin-bottom: 0; 
  }
  .site-slogan {
    margin: 0; 
  }


  /**
    * Inhaltsbereich   
    */ 

  /* Zeilenabstand auf das anderthalbfache der Schriftgröße */
  .site-content {
    line-height: 1.5;
    
    /* Sticky Footer Variante 1: Inhaltsbereich wächst und drückt den Footer nach unten */ 
    flex: 1; 
  }


  /**
    * Fußbereich   
    */ 

  /* Grundlegende Gestaltung der Fußzeile aus Teil 1 (inkl. font-size kleiner) */
  .site-footer {
    font-size: smaller;
    background-color: #333; 
    padding: 1rem 0; /* ohne horizontales Padding */  
    /* margin-top: 2rem; */
    
    /* Sticky Footer Variante 2: Automatischer margin drückt den Fußbereich nach unten */ 
    margin-top: auto; 
    
    clear: both; 
  }
  .site-footer a {
    color: white; 
    text-decoration: none; 
  }

} /* Ende @media */ 